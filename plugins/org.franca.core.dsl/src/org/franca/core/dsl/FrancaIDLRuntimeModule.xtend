/*
 * generated by Xtext
 */
package org.franca.core.dsl

import org.eclipse.xtext.conversion.IValueConverterService
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy
import org.franca.core.dsl.resource.FrancaCoreResourceDescriptionStrategy
import org.franca.core.dsl.valueconverter.FrancaValueConverters
import com.google.inject.Binder

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class FrancaIDLRuntimeModule extends org.franca.core.dsl.AbstractFrancaIDLRuntimeModule {
	/* (non-Javadoc)
	 * @see org.eclipse.etrice.core.AbstractRoomRuntimeModule#configureIScopeProviderDelegate(com.google.inject.Binder)
	 */
	override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(org.eclipse.xtext.scoping.IScopeProvider).annotatedWith(
			com.google.inject.name.Names.named(
				org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(
			org.eclipse.xtext.scoping.impl.ImportedNamespaceAwareLocalScopeProvider)
	}

	override Class<? extends IValueConverterService> bindIValueConverterService() {
		return FrancaValueConverters
	}

	def Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
		return FrancaCoreResourceDescriptionStrategy
	}
}
